<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="4" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-10-19T15:49:05 ART" name="Default suite" finished-at="2020-10-19T15:49:06 ART" duration-ms="34">
    <groups>
    </groups>
    <test started-at="2020-10-19T15:49:05 ART" name="Default test" finished-at="2020-10-19T15:49:06 ART" duration-ms="34">
      <class name="test.ProgramaTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="beforeSuite" finished-at="2020-10-19T15:49:05 ART" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="beforeTest" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="beforeClass" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="beforeMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addProgramacion()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="addProgramacion" finished-at="2020-10-19T15:49:05 ART" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProgramacion -->
        <test-method signature="eliminarProgramaciones()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="eliminarProgramaciones" finished-at="2020-10-19T15:49:05 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eliminarProgramaciones -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="beforeMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="afterMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="afterMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="f" data-provider="dp" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method public void test.ProgramaTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method public void test.ProgramaTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp
at org.testng.internal.Parameters.findDataProvider(Parameters.java:559)
at org.testng.internal.Parameters.handleParameters(Parameters.java:772)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:789)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method signature="getCantOcurrencias()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="getCantOcurrencias" finished-at="2020-10-19T15:49:05 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCantOcurrencias -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="beforeMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="beforeMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getCantProgramaciones()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="getCantProgramaciones" finished-at="2020-10-19T15:49:05 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCantProgramaciones -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="afterMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="afterMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getCantTareasEntre()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="getCantTareasEntre" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
at test.ProgramaTest.getCantTareasEntre(ProgramaTest.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCantTareasEntre -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="beforeMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="programaVacio()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="programaVacio" finished-at="2020-10-19T15:49:05 ART" duration-ms="1" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
at test.ProgramaTest.programaVacio(ProgramaTest.java:103)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- programaVacio -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="afterMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="beforeMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="afterMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="removeProgramacion()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="removeProgramacion" finished-at="2020-10-19T15:49:05 ART" duration-ms="1" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Test not implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Test not implemented
at test.ProgramaTest.removeProgramacion(ProgramaTest.java:108)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeProgramacion -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="beforeMethod" finished-at="2020-10-19T15:49:05 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:05 ART" name="afterMethod" finished-at="2020-10-19T15:49:06 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:06 ART" name="afterClass" finished-at="2020-10-19T15:49:06 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:06 ART" name="afterTest" finished-at="2020-10-19T15:49:06 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:test.ProgramaTest@29176cc1]" started-at="2020-10-19T15:49:06 ART" name="afterSuite" finished-at="2020-10-19T15:49:06 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.ProgramaTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
